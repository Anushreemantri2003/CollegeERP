# Generated by Django 4.2.19 on 2025-02-20 18:44

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('accounts', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='FACULTY',
            fields=[
                ('CREATED_AT', models.DateTimeField(auto_now_add=True, db_column='CREATED_AT')),
                ('UPDATED_AT', models.DateTimeField(auto_now=True, db_column='UPDATED_AT')),
                ('DELETED_AT', models.DateTimeField(blank=True, db_column='DELETED_AT', null=True)),
                ('IS_DELETED', models.BooleanField(db_column='IS_DELETED', default=False)),
                ('FACULTY_ID', models.AutoField(db_column='FACULTY_ID', primary_key=True, serialize=False)),
                ('EMPLOYEE_ID', models.CharField(db_column='EMPLOYEE_ID', max_length=20, unique=True)),
                ('DATE_OF_JOINING', models.DateField(db_column='DATE_OF_JOINING')),
                ('SPECIALIZATION', models.CharField(db_column='SPECIALIZATION', max_length=255)),
                ('TEACHING_AREAS', models.JSONField(db_column='TEACHING_AREAS')),
                ('IS_ACTIVE', models.BooleanField(db_column='IS_ACTIVE', default=True)),
                ('BRANCH', models.ForeignKey(db_column='BRANCH_ID', on_delete=django.db.models.deletion.PROTECT, to='accounts.branch')),
                ('CREATED_BY', models.ForeignKey(blank=True, db_column='CREATED_BY', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='%(class)s_created', to=settings.AUTH_USER_MODEL)),
                ('DELETED_BY', models.ForeignKey(blank=True, db_column='DELETED_BY', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_deleted', to=settings.AUTH_USER_MODEL)),
                ('PROGRAM', models.ForeignKey(db_column='PROGRAM_ID', on_delete=django.db.models.deletion.PROTECT, to='accounts.program')),
                ('UPDATED_BY', models.ForeignKey(blank=True, db_column='UPDATED_BY', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='%(class)s_updated', to=settings.AUTH_USER_MODEL)),
                ('USER', models.OneToOneField(db_column='USER_ID', on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Faculty',
                'verbose_name_plural': 'Faculty',
                'db_table': '"FACULTY"."FACULTY"',
            },
        ),
        migrations.CreateModel(
            name='FACULTY_RESEARCH',
            fields=[
                ('CREATED_AT', models.DateTimeField(auto_now_add=True, db_column='CREATED_AT')),
                ('UPDATED_AT', models.DateTimeField(auto_now=True, db_column='UPDATED_AT')),
                ('DELETED_AT', models.DateTimeField(blank=True, db_column='DELETED_AT', null=True)),
                ('IS_DELETED', models.BooleanField(db_column='IS_DELETED', default=False)),
                ('RESEARCH_ID', models.AutoField(db_column='RESEARCH_ID', primary_key=True, serialize=False)),
                ('RESEARCH_TYPE', models.CharField(choices=[('PUBLICATION', 'Publication'), ('PATENT', 'Patent'), ('PROJECT', 'Project'), ('THESIS', 'Thesis'), ('BOOK', 'Book')], db_column='RESEARCH_TYPE', max_length=20)),
                ('TITLE', models.CharField(db_column='TITLE', max_length=500)),
                ('DESCRIPTION', models.TextField(db_column='DESCRIPTION')),
                ('AUTHORS', models.JSONField(db_column='AUTHORS')),
                ('PUBLICATION_DETAILS', models.JSONField(db_column='PUBLICATION_DETAILS')),
                ('YEAR', models.IntegerField(db_column='YEAR')),
                ('STATUS', models.CharField(choices=[('PUBLISHED', 'Published'), ('ACCEPTED', 'Accepted'), ('SUBMITTED', 'Submitted'), ('ONGOING', 'Ongoing'), ('COMPLETED', 'Completed')], db_column='STATUS', max_length=20)),
                ('IMPACT_FACTOR', models.DecimalField(blank=True, db_column='IMPACT_FACTOR', decimal_places=3, max_digits=5, null=True)),
                ('CITATIONS', models.IntegerField(db_column='CITATIONS', default=0)),
                ('DOI', models.CharField(blank=True, db_column='DOI', max_length=100, null=True)),
                ('URL', models.URLField(blank=True, db_column='URL', null=True)),
                ('DOCUMENTS', models.JSONField(blank=True, db_column='DOCUMENTS', null=True)),
                ('IS_VERIFIED', models.BooleanField(db_column='IS_VERIFIED', default=False)),
                ('CREATED_BY', models.ForeignKey(blank=True, db_column='CREATED_BY', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='%(class)s_created', to=settings.AUTH_USER_MODEL)),
                ('DELETED_BY', models.ForeignKey(blank=True, db_column='DELETED_BY', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_deleted', to=settings.AUTH_USER_MODEL)),
                ('FACULTY', models.ForeignKey(db_column='FACULTY_ID', on_delete=django.db.models.deletion.CASCADE, related_name='research', to='faculty.faculty')),
                ('UPDATED_BY', models.ForeignKey(blank=True, db_column='UPDATED_BY', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='%(class)s_updated', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Faculty Research',
                'verbose_name_plural': 'Faculty Research',
                'db_table': '"FACULTY"."FACULTY_RESEARCH"',
            },
        ),
        migrations.CreateModel(
            name='FACULTY_EXPERIENCE',
            fields=[
                ('CREATED_AT', models.DateTimeField(auto_now_add=True, db_column='CREATED_AT')),
                ('UPDATED_AT', models.DateTimeField(auto_now=True, db_column='UPDATED_AT')),
                ('DELETED_AT', models.DateTimeField(blank=True, db_column='DELETED_AT', null=True)),
                ('IS_DELETED', models.BooleanField(db_column='IS_DELETED', default=False)),
                ('EXPERIENCE_ID', models.AutoField(db_column='EXPERIENCE_ID', primary_key=True, serialize=False)),
                ('ORGANIZATION', models.CharField(db_column='ORGANIZATION', max_length=255)),
                ('DESIGNATION', models.CharField(db_column='DESIGNATION', max_length=100)),
                ('START_DATE', models.DateField(db_column='START_DATE')),
                ('END_DATE', models.DateField(blank=True, db_column='END_DATE', null=True)),
                ('RESPONSIBILITIES', models.TextField(db_column='RESPONSIBILITIES')),
                ('EXPERIENCE_TYPE', models.CharField(choices=[('TEACHING', 'Teaching'), ('INDUSTRY', 'Industry'), ('RESEARCH', 'Research')], db_column='EXPERIENCE_TYPE', max_length=20)),
                ('DOCUMENTS', models.JSONField(blank=True, db_column='DOCUMENTS', null=True)),
                ('IS_VERIFIED', models.BooleanField(db_column='IS_VERIFIED', default=False)),
                ('CREATED_BY', models.ForeignKey(blank=True, db_column='CREATED_BY', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='%(class)s_created', to=settings.AUTH_USER_MODEL)),
                ('DELETED_BY', models.ForeignKey(blank=True, db_column='DELETED_BY', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_deleted', to=settings.AUTH_USER_MODEL)),
                ('FACULTY', models.ForeignKey(db_column='FACULTY_ID', on_delete=django.db.models.deletion.CASCADE, related_name='experiences', to='faculty.faculty')),
                ('UPDATED_BY', models.ForeignKey(blank=True, db_column='UPDATED_BY', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='%(class)s_updated', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Faculty Experience',
                'verbose_name_plural': 'Faculty Experiences',
                'db_table': '"FACULTY"."FACULTY_EXPERIENCE"',
            },
        ),
        migrations.CreateModel(
            name='FACULTY_QUALIFICATION',
            fields=[
                ('CREATED_AT', models.DateTimeField(auto_now_add=True, db_column='CREATED_AT')),
                ('UPDATED_AT', models.DateTimeField(auto_now=True, db_column='UPDATED_AT')),
                ('DELETED_AT', models.DateTimeField(blank=True, db_column='DELETED_AT', null=True)),
                ('IS_DELETED', models.BooleanField(db_column='IS_DELETED', default=False)),
                ('QUALIFICATION_ID', models.AutoField(db_column='QUALIFICATION_ID', primary_key=True, serialize=False)),
                ('DEGREE', models.CharField(db_column='DEGREE', max_length=100)),
                ('SPECIALIZATION', models.CharField(db_column='SPECIALIZATION', max_length=255)),
                ('UNIVERSITY', models.CharField(db_column='UNIVERSITY', max_length=255)),
                ('YEAR_OF_PASSING', models.IntegerField(db_column='YEAR_OF_PASSING')),
                ('PERCENTAGE', models.DecimalField(db_column='PERCENTAGE', decimal_places=2, max_digits=5)),
                ('DOCUMENTS', models.JSONField(blank=True, db_column='DOCUMENTS', null=True)),
                ('IS_VERIFIED', models.BooleanField(db_column='IS_VERIFIED', default=False)),
                ('CREATED_BY', models.ForeignKey(blank=True, db_column='CREATED_BY', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='%(class)s_created', to=settings.AUTH_USER_MODEL)),
                ('DELETED_BY', models.ForeignKey(blank=True, db_column='DELETED_BY', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_deleted', to=settings.AUTH_USER_MODEL)),
                ('FACULTY', models.ForeignKey(db_column='FACULTY_ID', on_delete=django.db.models.deletion.CASCADE, related_name='qualifications', to='faculty.faculty')),
                ('UPDATED_BY', models.ForeignKey(blank=True, db_column='UPDATED_BY', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='%(class)s_updated', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Faculty Qualification',
                'verbose_name_plural': 'Faculty Qualifications',
                'db_table': '"FACULTY"."FACULTY_QUALIFICATIONS"',
                'unique_together': {('FACULTY', 'DEGREE')},
            },
        ),
    ]
